#include <DHT.h> //https://github.com/adafruit/DHT-sensor-library/blob/master/examples/DHTtester/DHTtester.ino
#include <DHT_U.h>
#include <Wire.h>
#include <LiquidCrystal_I2C.h>

LiquidCrystal_I2C lcd(0x27, 16, 2);

#define pinoDHT 8

//Altere para DHT11 no real
DHT dht(pinoDHT, DHT22);

#define Red 7
#define Green 6
#define Blue 5

#define buzzer 9

int ValorLDR; 
int IntensidadeLuz; 
int pinoLDR = A0; 

//Bytes dos Simbolos de Luz
/**Cada byte é um vetor que cabe 4 conjuntos de 8 bits
 * Nesse caso o  primeiro é a lua; 
 * a esquerda é a linha mais a acima e o da direita é o mais abaixo baixo**/
byte SimboloCima01[4][8] = {
  //Lua
  {B00000, B00000, B00000, B00011, B01111, B01110, B11100, B11100},
  
  // Nublado
  {B00000, B00000, B00000, B00000, B00000, B00000, B00111, B01000},

    // Sol entre nuvens
  {B00000, B00000, B00100, B00010, B00000, B00001, B00111, B01000},
   // Sol
  {B00000, B00000, B00000, B00000, B01000, B00100, B00001, B11010},
};

byte SimboloBaixo01[4][8] = {
  //LUA   
  { B11100, B11110, B01111, B01111, B00111, B00000, B00000, B00000},  
     // Nublado
  {B01000, B10000, B01111, B00000, B00000, B00000, B00000, B00000},
 // Sol entre nuvens
  {B01000, B10000, B01111, B00000, B00000, B00000, B00000, B00000},
   // Sol
  {B00010, B00001, B00100, B01001, B00001, B00000, B00000, B00000},

};


byte SimboloCima02[4][8] = {
  //LUA
  {B00000, B00000, B00000, B10000, B00000, B00000, B00000, B00000}, 
     // Nublado
  {B00000, B00000, B00000, B00000, B00000, B00000, B01100, B11010},
 // Sol entre nuvens
  {B00000, B01000, B01001, B00010, B11000, B00101, B01100, B11010},
   // Sol
  {B00000, B00000, B00000, B10000, B10001, B00010, B10000, B01000},



};

byte SimboloBaixo02[4][8] = {
  //LUA   
  { B00010, B00110, B11110, B11100, B11000, B00000, B00000, B00000},  
       // Nublado
  {B00001, B00011, B11110, B00000, B00000, B00000, B00000, B00000},
 // Sol entre nuvens
  {B00001, B00011, B11110, B00000, B00000, B00000, B00000, B00000},
   // Sol
  {B01011, B10000, B00100, B00010, B00000, B00000, B00000, B00000},


};


/////////////////////////////////////////////////////////////////
//Simbolos de Temperatura
byte TempEsqSup[3][8] = {
  //Calor
  {B00000, B00000, B00000, B00000, B00111, B01000, B11000, B11111},

  //Muito frio
  {B00000, B00111, B01000, B11000, B10000, B11111, B11010, B10010},

  //Ameno
  {B00000, B00000, B00000, B00000, B00111, B01000, B11010, B10010},
};


byte TempEsqInf[3][8] = {
  //Calor
  {B10110, B11000, B01000, B00111, B00000, B00000, B00000, B00000},

  //Muito frio
  {B10000, B11111, B10100, B11111, B10100, B10100, B10100, B11100},

  //Ameno
  {B10000, B11000, B01000, B00111, B00000, B00000, B00000, B00000},
};


byte TempDirSup[3][8] = {
  //Calor
  {B00000, B00000, B00000, B00000, B11100, B00010, B00011, B11111},

  //Muito frio
  {B01100, B10010, B00010, B00011, B00001, B11111, B01011, B01001},

  //Ameno
  {B00000, B00000, B00000, B00000, B11100, B00010, B01011, B01001},
};


byte TempDirInf[3][8] = {
  //Calor
  {B01101, B00011, B00010, B11100, B00000, B00000, B00000, B00000},
  
  //Muito frio
  {B00001, B11111, B10101, B11111, B00000, B00000, B00000, B00000},

  //Ameno
  {B00001, B00011, B00010, B11100, B00000, B00000, B00000, B00000},
};

/////////////////////////////////////////////////////////////////
//Simbolos de Umidade
byte UmiEsqSup[5][8] =
{
  //Muito seco
  {B00000, B00001, B00001, B00011, B00010, B00110, B00100, B01100},

  //Seco
  {B00000, B00001, B00001, B00011, B00010, B00110, B00100, B01100},

  //Ameno
  {B00000, B00001, B00001, B00011, B00010, B00110, B00100, B01100},

  //Umido
  {B00000, B00001, B00001, B00011, B00010, B00110, B00100, B01111},

  //Super Umido
  {B00000, B00001, B00001, B00011, B00011, B00111, B00111, B01111},
};


byte UmiEsqInf[5][8] =
{
  //Muito seco
  {B01000, B10000, B10000, B10000, B10000, B10000, B01000, B00111},

  //Seco
  {B01000, B10000, B10000, B11111, B11111, B11111, B01111, B00111},

  //Ameno
  {B01000, B11111, B11111, B11111, B11111, B11111, B01111, B00111},

  //Umido
  {B01111, B11111, B11111, B11111, B11111, B11111, B01111, B00111},

  //Super Umido
  {B01111, B11111, B11111, B11111, B11111, B11111, B01111, B00111},
};


byte UmiDirSup[5][8] =
{
  //Muito seco
  {B00000, B10000, B10000, B11000, B01000, B01100, B00100, B00110},

  //Seco
  {B00000, B10000, B10000, B11000, B01000, B01100, B00100, B00110},

  //Ameno
  {B00000, B10000, B10000, B11000, B01000, B01100, B00100, B00110},

  //Umido
  {B00000, B10000, B10000, B11000, B01000, B01100, B00100, B11110},

  //Super Umido
  {B00000, B10000, B10000, B11000, B11000, B11100, B11100, B11110},
};


byte UmiDirInf[5][8] =
{
  //Muito seco
  {B00010, B00001, B00001, B00001, B00101, B01001, B00010, B11100},
  
  //Seco
  {B00010, B00001, B00001, B11111, B11011, B10111, B11110, B11100},

  //Ameno
  {B00010, B11111, B11111, B11111, B11011, B10111, B11110, B11100},

  //Umido
  {B11110, B11111, B11111, B11111, B11011, B10111, B11110, B11100},

  //Super Umido
  {B11110, B11111, B11111, B11111, B11011, B10111, B11110, B11100},
};
/////////////////////////////////////////////////////////////////////////////////



void setup()
{
  //Inicia do lcd
  lcd.begin(16,2);              
  lcd.clear(); 
  
  //Inicia o console
  Serial.begin(9600); 
  pinMode(pinoLDR, INPUT); 

  //Inicia RGB
  pinMode(Red, OUTPUT);
  pinMode(Green, OUTPUT);
  pinMode(Blue, OUTPUT);

  luz_RGB(100,100,100);

  tone(buzzer,440,200);

  dht.begin();

}



void luz_RGB(int valorR, int valorG, int valorB)
{
  analogWrite(Red, valorR); 
  analogWrite(Green, valorG);
  analogWrite(Blue, valorB);
}



//SetCursor define onde deseja começar nesse caso é no bloco 1 cima e depois o de baixo
//lcd.print escreve uma mensagem diretamente

void Ui(int IntensidadeLuz)
{
  lcd.clear();
    lcd.setCursor(1,0);
    lcd.print("Luz: " + String(IntensidadeLuz) + "%" );
    lcd.setCursor(1,1);
  int simbolo;
  
  // Entre 100% e 10% será muito claro
  if(IntensidadeLuz > 35)
  {
    lcd.print("Muito Claro");

    simbolo = 3;
  }
  else
  {
    //Entre 10% e 1% será claro 
    if(IntensidadeLuz > 2)
    {
      lcd.print("Claro");

      simbolo = 2;
    }
    else
    {
      //Entre 1% e 0.1% será escuro
      if(IntensidadeLuz > 0.5)
      {
       simbolo = 1;
       lcd.print("Escuro");

      }
      
      // Entre 0.1% e 0% será Muito Escuro
      else
      {
        lcd.print("Muito Escuro");
        simbolo = 0;
      }
    }
  }
    EscolherSimbolo(simbolo);
}

    /**Escolher simbolo é uma função que escolhe o simbolo com base do vetor dos bytes
     * 0 - Muito escuro
     * 1 - escuro
     * 2 - claro
     * 3 - Muito claro
    */

void EscolherSimbolo(int simbolo)
{
    /*Define onde estará guardado o desenho

    Como define:
    0 - Bloco esquerdo cima
    1 - Bloco esquerdo baixo
    2 - Bloco Direito Cima
    3 - Bloco Direito Baixo
    
    "simbolo" é o símbolo selecionado conforme explicado acima
    */

  lcd.createChar(0,SimboloCima01[simbolo]);
  lcd.createChar(1,SimboloBaixo01[simbolo]);
  lcd.createChar(2,SimboloCima02[simbolo]);
  lcd.createChar(3,SimboloBaixo02[simbolo]);

  lcd.setCursor(14,0);

  //Neste caso o LCD write ira escever no bloco 14 de Cima o conteudo guardado no byte 0(Parte Cima esquerdo do desenho)
  lcd.write(byte(0));

  lcd.setCursor(14,1);
   lcd.write(byte(1));

  lcd.setCursor(15,0);
  lcd.write(byte(2));


  lcd.setCursor(15,1);
  lcd.write(byte(3));
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//Temperatura
void TempUi(float Temperatura)
{
  lcd.clear();
    lcd.setCursor(1,0);
    lcd.print("Clima: " + String(Temperatura) + "C" );
    lcd.setCursor(1,1);
  int simbTemp;
  
  // Maior que 25 será Quente
  if(Temperatura > 25)
  {
    lcd.print("Calor");
    simbTemp = 0;
  }
  else
  {
    //Entre 15 e 25 será Ameno
    if(Temperatura > 15)
    {
      lcd.print("Ameno");
      simbTemp = 2;
    }
    else
    {
      //Menor que 15 será Frio
      if(Temperatura < 15)
      {
       lcd.print("Frio");
       simbTemp = 1;
      }
    }
  }
    EscSimTemp(simbTemp);
}

void EscSimTemp(int simbTemp)
{
  lcd.createChar(0,TempEsqSup[simbTemp]);
  lcd.createChar(1,TempEsqInf[simbTemp]);
  lcd.createChar(2,TempDirSup[simbTemp]);
  lcd.createChar(3,TempDirInf[simbTemp]);

  lcd.setCursor(14,0);

  lcd.write(byte(0));

  lcd.setCursor(14,1);
   lcd.write(byte(1));

  lcd.setCursor(15,0);
    lcd.write(byte(2));

  lcd.setCursor(15,1);
    lcd.write(byte(3));
}
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//Umidade
void UmiUi(float Umidade)
{
  lcd.clear();
    lcd.setCursor(1,0);
    lcd.print("Umidade: " + String(Umidade) + "%" );
    lcd.setCursor(1,1);
  int simbUmi;
  
  if(Umidade > 50)
  {
    lcd.print("Muito umido");
    simbUmi = 4;
  }
  else
  {
    if(Umidade > 40)
    {
      lcd.print("Umido");
      simbUmi = 3;
    }
    else
    {
      if(Umidade >= 30)
      {
       lcd.print("Baixa");
       simbUmi = 2;
      }
      else
      {
        if(Umidade > 10)
        {
          lcd.print("Seco");
          simbUmi = 1;
        }
        else
        {
          lcd.print("Muito seco");
          simbUmi = 0;
        }
      }
    }
  }
    EscSimUmi(simbUmi);
}

void EscSimUmi(int simbUmi)
{
  lcd.createChar(0,UmiEsqSup[simbUmi]);
  lcd.createChar(1,UmiEsqInf[simbUmi]);
  lcd.createChar(2,UmiDirSup[simbUmi]);
  lcd.createChar(3,UmiDirInf[simbUmi]);

  lcd.setCursor(14,0);
    lcd.write(byte(0));

  lcd.setCursor(14,1);
    lcd.write(byte(1));

  lcd.setCursor(15,0);
    lcd.write(byte(2));

  lcd.setCursor(15,1);
    lcd.write(byte(3));

   lcd.setCursor(16,0);
    lcd.write(byte(4));
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
void SerialDisplay(int ValorLDR, int IntensidadeLuz)
{
  Serial.print("Intensidade de Luz 0 - 1023 = "); 
  Serial.println(ValorLDR); 
  Serial.print("Intensidade de Luz 0 - 100% = ");
  Serial.println(IntensidadeLuz);
}



void loop()
{
  //Luz
  //Pega o valor da luz e converte em porcentagem
  ValorLDR = analogRead(pinoLDR); 
  IntensidadeLuz = map(ValorLDR, 0, 400, 0, 100); //Converte o valor para uma escala de 0 a 100
    if(IntensidadeLuz > 100)
    {
    IntensidadeLuz=100;
    }
  
  //Escreve no console serial os valores
  SerialDisplay(pinoLDR,IntensidadeLuz);
  
  //Aviso Sonoro
  tone(buzzer,440,200);

  //Passa para o LCD
  Ui(IntensidadeLuz);


  
  delay(3000);
  //////////////////////////////////////////////////////////////////////////////////////////////////////
  //Temperatura e umidade
  //Exibe os valores lidos
  float Umidade = dht.readHumidity();
  float Temperatura = dht.readTemperature();

  if (isnan(Umidade) || isnan(Temperatura))
  {
    Serial.println("Falha ao ler do DHT11!");
    return;
  }

  Serial.print("Umidade: ");
  Serial.print(Umidade);
  
  Serial.print("%  Temperatura: ");
  Serial.print(Temperatura);
  Serial.println("C");

  tone(buzzer,440,200);
  UmiUi(Umidade);
  delay(3000);

  tone(buzzer,440,200);
  TempUi(Temperatura);
  delay(3000);
}
